plugins {
	id "com.github.johnrengelman.shadow" version "7.1.2"
}
architectury {
	platformSetupLoomIde()
	forge()
}
loom {
	accessWidenerPath = project(":common").loom.accessWidenerPath
	forge {
		convertAccessWideners = true
		extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
		mixinConfig "${mod_id}-common.mixins.json"
		mixinConfig "${mod_id}.mixins.json"
	}
}
configurations {
	common
	shadowCommon
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentForge.extendsFrom common
}
dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.officialMojangMappings()
	forge "net.minecraftforge:forge:${forge_version}"
	common(project(path: ":common", configuration: "namedElements")) {
		transitive false
	}
	shadowCommon(project(path: ":common", configuration: "transformProductionForge")) {
		transitive false
	}
	// Architectury-api
	modApi "dev.architectury:architectury-forge:${architectury_version}"
	// MixinExtras
	compileOnly annotationProcessor("io.github.llamalad7:mixinextras-common:${forge_mixin_extras_version}")
	include implementation("io.github.llamalad7:mixinextras-forge:${forge_mixin_extras_version}")
	// Cloth Config API
	modApi "me.shedaniel.cloth:cloth-config-forge:${cloth_config_api_version}"
	// YACL
	// https://modrinth.com/mod/yacl/versions?g=1.20.1
	// > you will from now on depend on the fabric version of YACL
	implementation "dev.isxander:yet-another-config-lib:${yacl_mc_version}-fabric"
}
shadowJar {
	exclude "fabric.mod.json"
	exclude "architectury.common.json"
	configurations = [project.configurations.shadowCommon]
	archiveClassifier = "dev-shadow"
}
remapJar {
	inputFile.set shadowJar.archiveFile
	dependsOn shadowJar
}
sourcesJar {
	Task commonSources = project(":common").sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map {
		zipTree(it)
	}
}
base {
	archivesName = rootProject.archiveFileNameOfLoader("forge")
	version = ""
}
components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}
publishing {
	publications {}
	repositories {}
}
